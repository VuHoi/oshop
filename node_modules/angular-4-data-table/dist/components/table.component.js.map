{"version":3,"file":"table.component.js","sourceRoot":"","sources":["file:///D:/Prodaction/angular-4-data-table/src/components/table.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    Component, Input, Output, EventEmitter, ContentChildren, QueryList,\r\n    TemplateRef, ContentChild, ViewChildren, OnInit\r\n} from '@angular/core';\r\nimport { DataTableColumn } from './column.component';\r\nimport { DataTableRow } from './row.component';\r\nimport { DataTableParams } from '../types/data-table-params.type';\r\nimport { RowCallback } from '../types/row-callback.type';\r\nimport { DataTableTranslations } from '../types/data-table-translations.type';\r\nimport { defaultTranslations } from '../types/default-translations.type';\r\nimport { drag } from '../utils/drag';\r\nimport { TABLE_TEMPLATE } from './table.template';\r\nimport { TABLE_STYLE } from \"./table.style\";\r\n\r\n\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n  selector: 'data-table',\r\n  template: TABLE_TEMPLATE,\r\n  styles: [TABLE_STYLE]\r\n})\r\nexport class DataTable implements DataTableParams, OnInit {\r\n\r\n    private _items: any[] = [];\r\n\r\n    @Input() get items() {\r\n        return this._items;\r\n    }\r\n\r\n    set items(items: any[]) {\r\n        this._items = items;\r\n        this._onReloadFinished();\r\n    }\r\n\r\n    @Input() itemCount: number;\r\n\r\n    // UI components:\r\n\r\n    @ContentChildren(DataTableColumn) columns: QueryList<DataTableColumn>;\r\n    @ViewChildren(DataTableRow) rows: QueryList<DataTableRow>;\r\n    @ContentChild('dataTableExpand') expandTemplate: TemplateRef<any>;\r\n\r\n    // One-time optional bindings with default values:\r\n\r\n    @Input() headerTitle: string;\r\n    @Input() header = true;\r\n    @Input() pagination = true;\r\n    @Input() pagination_range = false;\r\n    @Input() pagination_limit = false;\r\n    @Input() pagination_input = false;\r\n    @Input() pagination_numbers = true;\r\n    @Input() indexColumn = true;\r\n    @Input() indexColumnHeader = '';\r\n    @Input() rowColors: RowCallback;\r\n    @Input() rowTooltip: RowCallback;\r\n    @Input() selectColumn = false;\r\n    @Input() multiSelect = true;\r\n    @Input() substituteRows = true;\r\n    @Input() expandableRows = false;\r\n    @Input() translations: DataTableTranslations = defaultTranslations;\r\n    @Input() selectOnRowClick = false;\r\n    @Input() autoReload = true;\r\n    @Input() showReloading = false;\r\n\r\n    // UI state without input:\r\n\r\n    indexColumnVisible: boolean;\r\n    selectColumnVisible: boolean;\r\n    expandColumnVisible: boolean;\r\n\r\n    // UI state: visible ge/set for the outside with @Input for one-time initial values\r\n\r\n    private _sortBy: string;\r\n    private _sortAsc = true;\r\n\r\n    private _offset = 0;\r\n    private _limit = 10;\r\n\r\n    @Input()\r\n    get sortBy() {\r\n        return this._sortBy;\r\n    }\r\n\r\n    set sortBy(value) {\r\n        this._sortBy = value;\r\n        this._triggerReload();\r\n    }\r\n\r\n    @Input()\r\n    get sortAsc() {\r\n        return this._sortAsc;\r\n    }\r\n\r\n    set sortAsc(value) {\r\n        this._sortAsc = value;\r\n        this._triggerReload();\r\n    }\r\n\r\n    @Input()\r\n    get offset() {\r\n        return this._offset;\r\n    }\r\n\r\n    set offset(value) {\r\n        this._offset = value;\r\n        this._triggerReload();\r\n    }\r\n\r\n    @Input()\r\n    get limit() {\r\n        return this._limit;\r\n    }\r\n\r\n    set limit(value) {\r\n        this._limit = value;\r\n        this._triggerReload();\r\n    }\r\n\r\n    // calculated property:\r\n\r\n    @Input()\r\n    get page() {\r\n        return Math.floor(this.offset / this.limit) + 1;\r\n    }\r\n\r\n    set page(value) {\r\n        this.offset = (value - 1) * this.limit;\r\n    }\r\n\r\n    get lastPage() {\r\n        return Math.ceil(this.itemCount / this.limit);\r\n    }\r\n\r\n    // setting multiple observable properties simultaneously\r\n\r\n    sort(sortBy: string, asc: boolean) {\r\n        this.sortBy = sortBy;\r\n        this.sortAsc = asc;\r\n    }\r\n\r\n    // init\r\n\r\n    ngOnInit() {\r\n        this._initDefaultValues();\r\n        this._initDefaultClickEvents();\r\n        this._updateDisplayParams();\r\n\r\n        if (this.autoReload && this._scheduledReload == null) {\r\n            this.reloadItems();\r\n        }\r\n    }\r\n\r\n    private _initDefaultValues() {\r\n        this.indexColumnVisible = this.indexColumn;\r\n        this.selectColumnVisible = this.selectColumn;\r\n        this.expandColumnVisible = this.expandableRows;\r\n    }\r\n\r\n    private _initDefaultClickEvents() {\r\n        this.headerClick.subscribe(tableEvent => this.sortColumn(tableEvent.column));\r\n        if (this.selectOnRowClick) {\r\n            this.rowClick.subscribe(tableEvent => tableEvent.row.selected = !tableEvent.row.selected);\r\n        }\r\n    }\r\n\r\n    // Reloading:\r\n\r\n    _reloading = false;\r\n\r\n    get reloading() {\r\n        return this._reloading;\r\n    }\r\n\r\n    @Output() reload = new EventEmitter();\r\n\r\n    reloadItems() {\r\n        this._reloading = true;\r\n        this.reload.emit(this._getRemoteParameters());\r\n    }\r\n\r\n    private _onReloadFinished() {\r\n        this._updateDisplayParams();\r\n\r\n        this._selectAllCheckbox = false;\r\n        this._reloading = false;\r\n    }\r\n\r\n    _displayParams = <DataTableParams>{}; // params of the last finished reload\r\n\r\n    get displayParams() {\r\n        return this._displayParams;\r\n    }\r\n\r\n    _updateDisplayParams() {\r\n        this._displayParams = {\r\n            sortBy: this.sortBy,\r\n            sortAsc: this.sortAsc,\r\n            offset: this.offset,\r\n            limit: this.limit\r\n        };\r\n    }\r\n\r\n    _scheduledReload = null;\r\n\r\n    // for avoiding cascading reloads if multiple params are set at once:\r\n    _triggerReload() {\r\n        if (this._scheduledReload) {\r\n            clearTimeout(this._scheduledReload);\r\n        }\r\n        this._scheduledReload = setTimeout(() => {\r\n            this.reloadItems();\r\n        });\r\n    }\r\n\r\n    // event handlers:\r\n\r\n    @Output() rowClick = new EventEmitter();\r\n    @Output() rowDoubleClick = new EventEmitter();\r\n    @Output() headerClick = new EventEmitter();\r\n    @Output() cellClick = new EventEmitter();\r\n\r\n    private rowClicked(row: DataTableRow, event) {\r\n        this.rowClick.emit({ row, event });\r\n    }\r\n\r\n    private rowDoubleClicked(row: DataTableRow, event) {\r\n        this.rowDoubleClick.emit({ row, event });\r\n    }\r\n\r\n    private headerClicked(column: DataTableColumn, event: MouseEvent) {\r\n        if (!this._resizeInProgress) {\r\n            this.headerClick.emit({ column, event });\r\n        } else {\r\n            this._resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\r\n        }\r\n    }\r\n\r\n    private cellClicked(column: DataTableColumn, row: DataTableRow, event: MouseEvent) {\r\n        this.cellClick.emit({ row, column, event });\r\n    }\r\n\r\n    // functions:\r\n\r\n    private _getRemoteParameters(): DataTableParams {\r\n        let params = <DataTableParams>{};\r\n\r\n        if (this.sortBy) {\r\n            params.sortBy = this.sortBy;\r\n            params.sortAsc = this.sortAsc;\r\n        }\r\n        if (this.pagination) {\r\n            params.offset = this.offset;\r\n            params.limit = this.limit;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    private sortColumn(column: DataTableColumn) {\r\n        if (column.sortable) {\r\n            let ascending = this.sortBy === column.property ? !this.sortAsc : true;\r\n            this.sort(column.property, ascending);\r\n        }\r\n    }\r\n\r\n    get columnCount() {\r\n        let count = 0;\r\n        count += this.indexColumnVisible ? 1 : 0;\r\n        count += this.selectColumnVisible ? 1 : 0;\r\n        count += this.expandColumnVisible ? 1 : 0;\r\n        this.columns.toArray().forEach(column => {\r\n            count += column.visible ? 1 : 0;\r\n        });\r\n        return count;\r\n    }\r\n\r\n    private getRowColor(item: any, index: number, row: DataTableRow) {\r\n        if (this.rowColors !== undefined) {\r\n            return (<RowCallback>this.rowColors)(item, row, index);\r\n        }\r\n    }\r\n\r\n    // selection:\r\n\r\n    selectedRow: DataTableRow;\r\n    selectedRows: DataTableRow[] = [];\r\n\r\n    private _selectAllCheckbox = false;\r\n\r\n    get selectAllCheckbox() {\r\n        return this._selectAllCheckbox;\r\n    }\r\n\r\n    set selectAllCheckbox(value) {\r\n        this._selectAllCheckbox = value;\r\n        this._onSelectAllChanged(value);\r\n    }\r\n\r\n    private _onSelectAllChanged(value: boolean) {\r\n        this.rows.toArray().forEach(row => row.selected = value);\r\n    }\r\n\r\n    onRowSelectChanged(row: DataTableRow) {\r\n\r\n        // maintain the selectedRow(s) view\r\n        if (this.multiSelect) {\r\n            let index = this.selectedRows.indexOf(row);\r\n            if (row.selected && index < 0) {\r\n                this.selectedRows.push(row);\r\n            } else if (!row.selected && index >= 0) {\r\n                this.selectedRows.splice(index, 1);\r\n            }\r\n        } else {\r\n            if (row.selected) {\r\n                this.selectedRow = row;\r\n            } else if (this.selectedRow === row) {\r\n                this.selectedRow = undefined;\r\n            }\r\n        }\r\n\r\n        // unselect all other rows:\r\n        if (row.selected && !this.multiSelect) {\r\n            this.rows.toArray().filter(row_ => row_.selected).forEach(row_ => {\r\n                if (row_ !== row) { // avoid endless loop\r\n                    row_.selected = false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // other:\r\n\r\n    get substituteItems() {\r\n        return Array.from({ length: this.displayParams.limit - this.items.length });\r\n    }\r\n\r\n    // column resizing:\r\n\r\n    private _resizeInProgress = false;\r\n\r\n    private resizeColumnStart(event: MouseEvent, column: DataTableColumn, columnElement: HTMLElement) {\r\n        this._resizeInProgress = true;\r\n\r\n        drag(event, {\r\n            move: (moveEvent: MouseEvent, dx: number) => {\r\n                if (this._isResizeInLimit(columnElement, dx)) {\r\n                    column.width = columnElement.offsetWidth + dx;\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    resizeLimit = 30;\r\n\r\n    private _isResizeInLimit(columnElement: HTMLElement, dx: number) {\r\n        /* This is needed because CSS min-width didn't work on table-layout: fixed.\r\n         Without the limits, resizing can make the next column disappear completely,\r\n         and even increase the table width. The current implementation suffers from the fact,\r\n         that offsetWidth sometimes contains out-of-date values. */\r\n        if ((dx < 0 && (columnElement.offsetWidth + dx) <= this.resizeLimit) ||\r\n            !columnElement.nextElementSibling || // resizing doesn't make sense for the last visible column\r\n            (dx >= 0 && ((<HTMLElement> columnElement.nextElementSibling).offsetWidth + dx) <= this.resizeLimit)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n"]}